-----------------------------------------------Movies-----------------------------------------------


--List movies (supporting paging, filtering and sorting)--

HTTP Method: GET
HTTP Path: /movies?limit=[limit]&offset=[offset]&filter=[filter]&sortField=[sortField]&sortDirection=[sortDirection]
Path Parameters: limit=[integer], offset=[integer], filter=[string], sortField=[string], sortDirection=[string]
Query parameters: None
HTTP response codes: 200, 400, 404, 500
Success response schema: [
    { id, title, releaseDate, duration, actors, genres, director, description, rating, poster, trailer, createdAt, updatedAt }
]
Error response schema: { errorMessage, errorCode }

--Get Movie--

HTTP Method: GET
HTTP Path: /movies/[movieId]
Path Parameters: movieId=[integer]
Query parameters: None
HTTP response codes: 200, 400, 404, 500
Success response schema: { id, title, releaseDate, duration, actors, genres, director, description, rating, poster, trailer, createdAt, updatedAt }
Error response schema: { errorMessage, errorCode }


-----------------------------------------------Lists-----------------------------------------------


--Get user lists--

HTTP Method: GET
HTTP Path: /users/[userId]/lists
Path Parameters: userId=[integer]
Query parameters: None
HTTP response codes: 200, 400, 404, 500
Success response schema: [
    { id, name, description, movies, createdAt, updatedAt }
]
Error response schema: { errorMessage, errorCode }

--Create List--

HTTP Method: POST
HTTP Path: /users/[userId]/lists/[listId]
Path Parameters: userId=[integer], listId=[integer]
Query parameters: { id, name, description, movies, createdAt, updatedAt }
HTTP response codes: 200, 400, 404, 500
Success response schema: { id, name, description, movies, createdAt, updatedAt }
Error response schema: { errorMessage, errorCode }

--Get List--

HTTP Method: GET
HTTP Path: /users/[userId]/lists/[listId]
Path Parameters: userId=[integer], listId=[integer]
Query parameters: None
HTTP response codes: 200, 400, 404, 500
Success response schema: { id, name, description, movies, createdAt, updatedAt }
Error response schema: { errorMessage, errorCode }

--Update List--

HTTP Method: PUT
HTTP Path: /users/[userId]/lists/[listId]
Path Parameters: userId=[integer], listId=[integer]
Query parameters: { id, name, description, movies, createdAt, updatedAt }
HTTP response codes: 200, 400, 404, 500
Success response schema: { id, name, description, movies, createdAt, updatedAt }
Error response schema: { errorMessage, errorCode }

--Delete List--

HTTP Method: DELETE
HTTP Path: /users/[userId]/lists/[listId]
Path Parameters: userId=[integer], listId=[integer]
Query parameters: None
HTTP response codes: 200, 400, 404, 500
Success response schema: { id, name, description, movies, createdAt, updatedAt }
Error response schema: { errorMessage, errorCode }

--Add movie to list--

HTTP Method: POST
HTTP Path: /users/[userId]/lists/[listId]/movies/[movieId]
Path Parameters: userId=[integer], listId=[integer], movieId=[integer]
Query parameters: { id, title, releaseDate, duration, actors, genres, director, description, rating, poster, trailer, createdAt, updatedAt }
HTTP response codes: 200, 400, 404, 500
Success response schema: { id, title, releaseDate, duration, actors, genres, director, description, rating, poster, trailer, createdAt, updatedAt }
Error response schema: { errorMessage, errorCode }

--Remove movie from list--

HTTP Method: DELETE
HTTP Path: /users/[userId]/lists/[listId]/movies/[movieId]
Path Parameters: userId=[integer], listId=[integer], movieId=[integer]
Query parameters: None
HTTP response codes: 200, 400, 404, 500
Success response schema: { id, title, releaseDate, duration, actors, genres, director, description, rating, poster, trailer, createdAt, updatedAt }
Error response schema: { errorMessage, errorCode }


-----------------------------------------------Genres-----------------------------------------------


--Get genres--

HTTP Method: GET
HTTP Path: /genres
Path Parameters: None
Query parameters: None
HTTP response codes: 200, 400, 404, 500
Success response schema: [
    { id, genre }
]
Error response schema: { errorMessage, errorCode }


-----------------------------------------------Users Profile-----------------------------------------------


--Get user profile--

HTTP Method: GET
HTTP Path: /users/[userId]
Path Parameters: userId=[integer]
Query parameters: None
HTTP response codes: 200, 400, 404, 500
Success response schema: { id, name, email, photo, createdAt, updatedAt }
Error response schema: { errorMessage, errorCode }

--Update user profile--

HTTP Method: PUT
HTTP Path: /users/[userId]
Path Parameters: userId=[integer]
Query parameters: { id, name, email, photo, createdAt, updatedAt }
HTTP response codes: 200, 400, 404, 500
Success response schema: { id, name, email, photo, createdAt, updatedAt }
Error response schema: { errorMessage, errorCode }

--Upload user photo--

HTTP Method: POST
HTTP Path: /users/[userId]/photo
Path Parameters: userId=[integer]
Query parameters: { id, photo }
HTTP response codes: 200, 400, 404, 500
Success response schema: { id, name, email, photo, createdAt, updatedAt }
Error response schema: { errorMessage, errorCode }

--Remove user photo--

HTTP Method: DELETE
HTTP Path: /users/[userId]/photo
Path Parameters: userId=[integer]
Query parameters: None
HTTP response codes: 200, 400, 404, 500
Success response schema: { id, name, email, photo, createdAt, updatedAt }
Error response schema: { errorMessage, errorCode }
